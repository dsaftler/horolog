{"version":3,"sources":["utils/API.js","components/Jumbotron/index.js","components/Grid/index.js","pages/home.jsx","pages/CustomHooks.jsx","pages/login.jsx","pages/signup.jsx","pages/block.jsx","pages/client.jsx","pages/project.jsx","pages/report_params.jsx","pages/time_sheet.jsx","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["API","data","axios","post","Jumbotron","_ref","children","react_default","a","createElement","style","height","clear","paddingTop","textAlign","className","Container","fluid","concat","Row","_ref2","Col","_ref3","size","split","map","join","Home","components_Jumbotron","react_router_dom","to","variant","useClientForm","callback","_useState","useState","_useState2","Object","slicedToArray","inputs","setInputs","handleFormSubmit","event","preventDefault","name","is_archived","then","response","console","log","body","id","catch","err","handleInputChange","persist","input","objectSpread","defineProperty","target","value","useProjectForm","_useState9","_useState10","handleSubmit","Login","_useLoginForm","_useState7","_useState8","email","password","status","error","useLoginForm","onSubmit","type","onChange","required","onClick","Signup","_useSignUpForm","_useState5","_useState6","useSignUpForm","alert","firstname","lastname","action","method","password1","password2","Block","_useBlockForm","_useState3","_useState4","useBlockForm","TextareaAutosize","notes","RadioGroup","aria-label","color","FormControlLabel","control","Radio","label","labelPlacement","Client","_useClientForm","Project","_useProjectForm","brief","narrative","Report","_useReportForm","_useState13","_useState14","useReportForm","TimeSheet","Nav","href","App","CssBaseline","components_Nav","react_router","exact","path","component","Report_Params","Time_Sheet","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.61c83cd7.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default {\n//#region  CLIENTS\n  getClients: function () {\n    return axios.get('/clients'); // Gets all clients\n  },\n  getClientsActive: function () {\n    return axios.get('/clients', {\n      params: {\n        is_archived: 1\n      } // Gets active clients\n    })\n  },\n  getClient: function (id) {\n    return axios.get('/clients/' + id); // Gets the client with the given id\n  },\n  updClient: function (id) {\n    return axios.put('/clients/' + id, {\n       \"obj\": \"obj\" \n      // \"name\": name,\n      // \"is_archived\": is_archived\n    }\n    )\n  },\n  deleteClient: function (id) {\n    return axios.delete('/clients/' + id,\n      { \"obj\": \"obj\" }) // Deletes the client with the given id\n  },\n  saveClient: function(data) {\n    return axios.post('/clients', data)\n      // \"name\": name\n   \n    //  ) // Saves a client to the database\n  },\n//#endregion \n//#region  PROJECTS\n  getProjects: function () {\n    return axios.get('/projects'); // Gets all projects\n  },\n  getProject: function (id) {\n    return axios.get('/projects/' + id); // Gets the project with the given id\n  },\n  updProject: function (id) {\n    return axios.put('/projects/' + id, {\"obj\":\"obj\"})\n  },\n  deleteProject: function (id) {\n    return axios.delete('/projects/' + id,\n      { \"obj\": \"obj\" }) // Deletes the project with the given id\n  },\n  saveProject: function ([]) {\n    return axios.post('/projects', { \"obj\": \"obj\" }); // Saves a project to the database\n  },\n//#endregion\n//#region  BLOCKS\n  getBlocks: function () {\n    return axios.get('/blocks'); // Gets all blocks\n  },\n  getBlock: function (id) {\n    return axios.get('/blocks/' + id); // Gets the block with the given id\n  },\n  updBlock: function (id) {\n    return axios.put('/blocks/' + id, { \"obj\": \"obj\" })\n  },\n  deleteBlock: function (id) {\n    return axios.delete('/blocks/' + id,\n      { \"obj\": \"obj\" }) // Deletes the block with the given id\n  },\n  saveBlock: function ([]) {\n    return axios.post('/blocks', { \"obj\": \"obj\" }); // Saves a block to the database\n  },\n//#endregion\n//#region  USER\ngetUsers: function () {\n  return axios.get('/users'); // Gets all users\n},\ngetUser: function (id) {\n  return axios.get('/users/' + id); // Gets the user with the given id\n},\nupdUser: function (id) {\n  return axios.put('/users/' + id, [])\n},\ndeleteUser: function (id) {\n  return axios.delete('/users/' + id,\n    { \"obj\": \"obj\" }) // Deletes the user with the given id\n},\nsaveUser: function ([]) {\n  return axios.post('/login', { \"obj\": \"obj\" }); // Saves a user to the database\n},\n//#endregion\n\n};\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Col, Row, Container } from \"../components/Grid\";\nconst Home = () => {\n  return (\n  <Container fluid>\n    <Row>\n      <Col size=\"md-12\">\n        <Jumbotron>\n          <h1>Home</h1>\n          <Link to={'client'}>\n            <button variant=\"raised\">\n              Client\n            </button>\n          </Link>\n          <Link to={'project'}>\n            <button variant=\"raised\">\n              Project\n             </button>\n          </Link>\n            <Link to={'block'}>\n              <button variant=\"raised\">\n                Timer Block\n            </button>\n            </Link>\n          <Link to={'report'}>\n            <button variant=\"raised\">\n              Reports\n              </button>\n          </Link>\n          <Link to={'time'}>\n            <button variant=\"raised\">\n              Time Sheets\n              </button>\n          </Link>\n          <Link to={'login'}>\n            <button variant=\"raised\">\n              Login\n          </button>\n          </Link>\n           <Link to={'signup'}>\n             <button variant=\"raised\">\n                SignUp\n             </button>\n          </Link>\n        </Jumbotron>\n      </Col>\n    </Row>\n  </Container>\n  )\n }\nexport default Home;","import  {useState} from 'react' \nimport { Redirect } from 'react-router-dom'\nimport API from \"../utils/API\";\nimport axios from 'axios';\n\nexport const useClientForm = (callback) => {\n  const [inputs, setInputs] = useState({});\n  \n  const handleFormSubmit = event => {\n    event.preventDefault();\n    if (inputs.name) {\n      API.saveClient({\n        name: inputs.name,\n       is_archived: inputs.is_archived\n      })\n      .then(response =>  console.log('Client response' + response.body.id))\n      .catch(err => console.log(err))  ;\n    }\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(input => ({ ...inputs, [event.target.name]: event.target.value }));\n  }\n  return {\n    handleFormSubmit,\n    handleInputChange,\n    inputs\n  };\n}\n\nexport const useBlockForm = (callback) => {\n  const [inputs, setInputs] = useState({});\n  const handleSubmit = (event) => {\n    if (event) {\n      event.preventDefault();\n    }\n    callback();\n  } \n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(input => ({...inputs, [event.target.name]: event.target.value}));\n  }\n  return {\n    handleSubmit,\n    handleInputChange,\n    inputs\n  };\n}\nexport const useSignUpForm = (callback) => {\n  const [inputs, setInputs] = useState({});\n  const handleSubmit = (event) => {\n    if (event) {\n      event.preventDefault();\n      // if (emailExists(inputs.email)) {\n        // //  from inputs: check for existing email, valid fields \n        // //  then pass to Post\n        // } else {\n          //   // throw an error ?\n          // }\n          \n        }\n        callback();\n      }\n      const handleInputChange = (event) => {\n        event.persist();\n        setInputs(input => ({ ...inputs, [event.target.name]: event.target.value }));\n      }\n      return {\n        handleSubmit,\n        handleInputChange,\n        inputs\n      };\n    }\nexport const useLoginForm = (callback) => {\n      const [inputs, setInputs] = useState({});\n      const handleSubmit = (event) => {\n        if (event) {\n          event.preventDefault();\n        }\n        axios\n        .post('auth/login', {\n          email: inputs.email,\n          password: inputs.password})\n      .then(response => {\n        console.log('login response')\n        console.log(response)\n        if (response.status === 200) {\n          const UserId = response.data.id\n        }\n      })\n      // return <Redirect to={{  }}></Redirect>\n      // redirect to Blocks with query\n      .catch(error => {\n        console.log(`login error: ${error}`)\n      })\n    }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(input => ({ ...inputs, [event.target.name]: event.target.value }));\n  }\n  const validEmail = (event) => {\n    // valid calls get.(users/signup/checkEmailExists)\n\n\n  }\n  return {\n    handleSubmit,\n    handleInputChange,\n    inputs\n  };\n}\nexport const useProjectForm = (callback) => {\n  const [inputs, setInputs] = useState({});\n  const handleSubmit = (event) => {\n    if (event) {\n      event.preventDefault();\n    }\n    callback();\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(input => ({ ...inputs, [event.target.name]: event.target.value }));\n  }\n  return {\n    handleSubmit,\n    handleInputChange,\n    inputs\n  };\n}\nexport const useTimeSheetForm = (callback) => {\n  const [inputs, setInputs] = useState({});\n  const handleSubmit = (event) => {\n    if (event) {\n      event.preventDefault();\n    }\n    callback();\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(input => ({ ...inputs, [event.target.name]: event.target.value }));\n  }\n  return {\n    handleSubmit,\n    handleInputChange,\n    inputs\n  };\n}\nexport const useReportForm = (callback) => {\n  const [inputs, setInputs] = useState({});\n  const handleSubmit = (event) => {\n    if (event) {\n      event.preventDefault();\n    }\n    callback();\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(input => ({ ...inputs, [event.target.name]: event.target.value }));\n  }\n  return {\n    handleSubmit,\n    handleInputChange,\n    inputs\n  };\n}\n\nexport const useForm = (callback) => {\n  const [inputs, setInputs] = useState({});\n  const handleSubmit = (event) => {\n    if (event) {\n      event.preventDefault();\n    }\n    callback();\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(input => ({ ...inputs, [event.target.name]: event.target.value }));\n  }\n  return {\n    handleSubmit,\n    handleInputChange,\n    inputs\n  };\n// export default {\n  //   getRecipes: function (query) {\n    //     return axios.get(\"/api/recipes\", { params: { q: query } });\n    //   }\n    // };\n} ","import React from 'react';\nimport { Link } from 'react-router-dom';\n// import { Input, FormBtn } from '../components/Form';\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { useLoginForm } from './CustomHooks'\n\nconst Login = () => {\n  const login = () => { alert(`Welcome to Horolog!   Email: ${inputs.email}`) }\n  const { inputs, handleInputChange, handleSubmit } = useLoginForm(login);\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <Link to={'/'}>\n              <button variant=\"raised\">\n                Home\n                </button>\n            </Link>  \n            <h1>Login</h1>\n            <form onSubmit={handleSubmit}>\n              <div>\n                <label>Email Address</label>\n                <input type='email' name='email' onChange={handleInputChange} value={inputs.email} required />\n              </div>\n              <div>\n                <label>Password</label>\n                <input type='text' name='password' onChange={handleInputChange} value={inputs.password} />\n              </div>\n              <button onClick={handleSubmit}>Login</button>\n            </form>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  )\n\n\n}\nexport default Login;\n// console.log('login.js');\n// class Login extends Component {\n//   state = {\n//     username: '',\n//     role: '',\n//     id: 0\n//   };\n\n//   handleInputChange = event => {\n//     const { name, value } = event.target;\n//     this.setState({\n//       [name]: value\n//     });\n//   };\n//   handleFormSubmit = event => {\n//     event.preventDefault();\n//     // if (this.state.username && this.state.password) {\n//     //   username: this.state.username\n//     //   // TODO   GET THIS FROM USER TABLE\n//     //   // role: this.state.role,\n//     //   // id: this.state.id\n//     // }\n//   };\n\n//   render() {\n//     return (\n//       <Container fluid>\n//         <Row>\n//           <Col size = 'md-6'>\n//             <Jumbotron>\n//             Login form\n//             </Jumbotron>\n//             <form>\n//               <Input \n//                 value = {this.state.username}\n//                 onChange = {this.handleInputChange}\n//                 name='username'\n//                 placeholder='Username (required)'\n//               />\n//               <Input  \n//                 value = {this.state.password}\n//                 onChange = {this.handleInputChange}\n//                 name='password'\n//                 placeholder='Password (required)'\n//               />\n\n//               <FormBtn \n//                 disabled={!(this.state.username && this.state.password)}\n//                 onClick={this.handleFormSubmit}\n//               > \n//                 Submit \n//               </FormBtn>\n//             </form>\n//           </Col>\n//         </Row>\n//       </Container>\n//     );\n//   }","import React from 'react';\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport {useSignUpForm} from './CustomHooks'\n\nconst Signup = () => {\n  const signup = () => {alert(`Welcome to Horolog!  Name: ${inputs.firstname} ${inputs.lastname} Email: ${inputs.email}`)}\n  const { inputs, handleInputChange, handleSubmit } = useSignUpForm(signup);\n  \n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>Sign Up</h1>\n      {/* <form action='users/signup' \n      method='POST'> */}\n      <form action='users/signup/permissions/1'\n                method='POST'>\n      <div>\n        <label>First Name</label>\n        <input type='text' name='firstname' onChange={handleInputChange} value={inputs.firstname} required />\n        <label>Last Name</label>\n        <input type='text' name='lastname' onChange={handleInputChange} value={inputs.lastname} required />\n      </div>\n      <div>\n        <label>Email Address</label>\n        <input type='email' name='email' onChange={handleInputChange} value={inputs.email} required />\n      </div>\n      <div>\n        <label>Password</label>\n        <input type='text' name='password1' onChange={handleInputChange} value={inputs.password1} />\n      </div>\n      <div>\n        <label>Re-enter Password</label>\n        <input type='text' name='password2' onChange={handleInputChange} value={inputs.password2} />\n      </div>\n      <button type='submit'>Sign Up</button>\n    </form>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\nexport default Signup","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n// import FormControl from '@material-ui/core/FormControl';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { useBlockForm } from './CustomHooks'\n\nconst Block = () => {\n\n    const block = () => { alert(`Block Added to Horolog!  Name: ${inputs.firstname} ${inputs.lastname} Email: ${inputs.email}`) }\n    const { inputs, handleInputChange, handleSubmit } = useBlockForm(block); console.log('from Block form') \n    // ! have to get these values from last session or default\n    const clientId = 1;\n    const projectId = 1;\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>Blocks</h1>\n            <Link to={'/'}>\n              <button variant=\"raised\">\n                Home\n                </button>\n            </Link>\n            {/* <form onSubmit={handleSubmit}> */}\n            <form action='/blocks/users/1/projects/1' method='POST'>\n              {/* <select value={clientId} onChange={handleInputChange} value={inputs.value}>\n                <option value={1}>Mind 4 Hire</option>\n                <option value={2}>SpareTime Productions</option>\n                <option value={3}>TitleWrite</option>\n                <option value={4}>Universal Auto Hail Repair</option>\n              </select> */}\n              <select value={projectId} onChange={handleInputChange} value={inputs.value}>\n                <option value={1}>Project 1</option>\n                <option value={2}>Project 2</option>\n                <option value={3}>Project 3</option>\n                <option value={4}>Project 4</option>\n              </select>\n              <div>\n                <label>Task Notes</label>\n                <TextareaAutosize name='notes' onChange={handleInputChange} value={inputs.notes}></TextareaAutosize>\n              </div>\n              <div>\n                <RadioGroup aria-label=\"curclass\" color='primary' name=\"curclass\" value='DEV' onChange={handleInputChange} value={inputs.value}>\n                  <FormControlLabel\n                    value=\"DEV\"\n                    control={<Radio />}\n                    label=\"DEV\"\n                    labelPlacement=\"top\"\n                  />\n                  <FormControlLabel\n                    value=\"O&E\"\n                    control={<Radio />}\n                    label=\"O&E\"\n                    labelPlacement=\"top\"\n                  />\n                </RadioGroup>\n              </div>\n              <div>\n                <button type='submit'>Start Timer</button>\n              </div>\n          \n            </form>\n          </Jumbotron>\n        </Col>\n      </Row>          \n    </Container>\n  );\n}\n\nexport default Block;","import React from \"react\";\n// import Select from 'react-select';\n// import Creatable from 'react-select/creatable';\n// import makeAnimated from 'react-select/animated';\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { useClientForm } from './CustomHooks'\n\nfunction Client() {\n  const client = () => {alert(`Client ${inputs.name} Archived: ${inputs.is_archived}`)}\n  const { inputs, handleInputChange, handleFormSubmit } = useClientForm(client);\n  \n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <Link to={'/'}>\n              <button variant=\"raised\">\n                Home\n                </button>\n            </Link>            \n            <h1>Client</h1>\n            {/* <form action='/clients' method='POST'>             */}\n            <form onSubmit={handleFormSubmit}>\n            <div>\n              <label>Client Name</label>\n              <input type='text' name='name' onChange={handleInputChange} value={inputs.name} required />\n            </div>\n            <div>\n              <label>Archived ?</label>\n              {/* //Todo  what is boolean?  how to call the data */}\n                <input type=\"checkbox\" name=\"is_archived\" onChange={handleInputChange} value={inputs.is_archived} />\n            </div>\n\n              <button type='submit'>Save</button>\n            </form>\n          </Jumbotron>\n\n        </Col>\n      </Row>\n\n    </Container>\n  );\n}\nexport default Client;\n// class Client extends React.Component {\n//   state = {\n//     selectedOption: null,\n//   };\n//   handleChange = selectedOption => {\n//     this.setState({ selectedOption });\n//     console.log(`Option selected:`, selectedOption);\n//   };\n//   render() {\n//     const { selectedOption } = this.state;\n\n//     return (\n//       <Select\n//         isMulti\n//         name='client'\n//         value={selectedOption}\n//         onChange={this.handleChange}\n//         options={options}\n//       />\n//     );\n//   }\n// }\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import Select from 'react-select';\n// import Creatable from 'react-select/creatable';\n// import makeAnimated from 'react-select/animated';\n// import Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n// import FormControl from '@material-ui/core/FormControl';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport {useProjectForm} from \"./CustomHooks.jsx\"\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\n\nfunction Project() {\n  const project = () => {\n    alert(`Project ${inputs.brief}`)\n  };\n  const { inputs, handleInputChange, handleSubmit } = useProjectForm(project);\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n              <Link to={'/'}>\n                <button variant=\"raised\">\n                  Home\n                </button>\n              </Link>\n            <h1>Project</h1>\n            <form action='projects/clients/1' method='POST'>\n              <div>\n                <label>Client</label>\n                <select onChange={handleInputChange} value={inputs.value}>\n                  <option value='Mind 4 Hire'>Mind 4 Hire</option>\n                  <option value='SpareTime Productions'>SpareTime Productions</option>\n                  <option value='TitleWrite'>TitleWrite</option>\n                  <option value='Universal Auto Hail Repair'>Universal Auto Hail Repair</option>\n                </select>\n              </div>\n               <div>\n                  <label>Brief Description</label>\n                  <input type='text' name='brief' onChange={handleInputChange} value={inputs.brief} required />\n               </div>\n               <div>\n                <label>Full Description</label>\n                <TextareaAutosize name='narrative' onChange={handleInputChange} value={inputs.narrative}></TextareaAutosize>\n                </div>\n              <div>\n                  <RadioGroup aria-label=\"defclass\" name=\"defclass\" value='' onChange={handleInputChange} value={inputs.value}>\n                    <FormControlLabel\n                      value=\"DEV\"\n                      control={<Radio />}\n                      label=\"DEV\"\n                      labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                      value=\"O&E\"\n                      control={<Radio />}\n                      label=\"O&E\"\n                      labelPlacement=\"top\"\n                    />\n                  </RadioGroup>  \n              </div>\n              <div>\n                <label>Archived: </label>\n                {/* //Todo  what is boolean?  how to call the data */}\n                  <input type=\"checkbox\" name=\"is_archived\" onChange={handleInputChange} value={inputs.is_archived} />\n              </div>\n              <button type='submit'>Save</button>\n            </form>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n\n}\n\nexport default Project;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { useReportForm } from './CustomHooks'\n\n const Report = () => {\n    const reportform = () => { alert(`Report Form`) }\n    const { inputs, handleInputChange, handleSubmit } = useReportForm(reportform);\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <Link to={'/'}>\n              <button variant=\"raised\">\n                Home\n                </button>\n            </Link>    \n            <h1>Report</h1>\n            <form action='queries/report' method='GET'>\n              <div>\n                <label>select client(s)</label>\n              </div>\n              <div>\n                <div>\n                  <label>select projects(s)</label>\n                </div>\n              </div>\n              <div>\n                <label>calendar start date</label>\n              </div>\n              <div>\n                <label>calendar end date</label>\n              </div>\n              <div>\n                <label>include DEV</label>\n              </div>\n              <div>\n                <label>include O&E</label>\n              </div>\n              <div>\n                <label>include submitted</label>\n              </div>\n              <div>\n                <label>include booked</label>\n              </div>\n              <button type='submit'>Report</button>\n            </form>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\nexport default Report","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Col, Row, Container } from \"../components/Grid\";\n\nimport { useTimeSheetForm } from './CustomHooks'\n\nconst TimeSheet = () => {\n  const timesheet = () => { alert(`Time Sheet}`) }\n  // const { inputs, handleInputChange, handleSubmit } = useTimeSheetForm(timesheet);\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <Link to={'/'}>\n              <button variant=\"raised\">\n                Home\n                </button>\n            </Link>    \n            <h1>Time Sheet</h1>\n            <form action='queries/timesheet' method='GET'>\n            <div>\n                <label>calendar start date</label>\n              </div>\n              <div>\n                <label>calendar end date</label>\n              </div>\n              <div>\n                <label>include submitted</label>\n              </div>      \n              <div>\n                <label>include booked</label>\n              </div>                        \n              <button type='submit'>Report</button>\n            </form>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default TimeSheet;\n","import React from \"react\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"/\">\n        src component nav\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\n// import ReactDOM from \"react-dom\"\nimport API from \"./utils/API\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import Select from 'react-select';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import LoginForm from './pages/login_form';\n// import SignupForm from './pages/signup_form';\nimport Home from './pages/home';\nimport Login from './pages/login';\nimport Signup from './pages/signup';\nimport Block from './pages/block';\nimport Client from './pages/client';\nimport Project from './pages/project';\nimport Report_Params from './pages/report_params';\nimport Time_Sheet from './pages/time_sheet';\nimport NoMatch from './pages/no_match';\nimport Nav from './components/Nav';\n// import Header from './components/Header'\n// import logo from \"./logo.svg\";\n// import Button from '@material-ui/core/Button';\nimport \"./App.css\";\n\nconsole.log('app.js');\n\nconst App = () => {\n  return (\n\n    \n    <Router>\n      <CssBaseline />\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path ='/' component =         {Home} />\n          <Route exact path = '/login' component =   {Login} />\n          <Route exact path = '/signup' component =  {Signup} />\n          <Route exact path = '/block' component =   {Block} />\n          <Route exact path = '/client' component =  {Client} />\n          <Route exact path = '/project' component = {Project} />\n          <Route exact path = '/report' component =  {Report_Params} />\n          <Route exact path = '/time' component =    {Time_Sheet} />\n          {/* <Route component  = {NoMatch} /> */}\n\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}